//使用 Webpack 进行 TypeScript 编译ts-loader时会调用这个配置

{
    "compileOnSave": false,
    "compilerOptions": {
        "outDir": "./dist/", // 打包到的目录
        "sourceMap": false, // 是否生成sourceMap（用于浏览器调试）
        "noImplicitAny": false,
        "noUnusedLocals": false,
        "noUnusedParameters": false,
        "declaration": false, // 是否生成声明文件
        // "declarationDir": "./dist/types/",// 声明文件打包的位置
        "declarationMap": false, // 是否生成声明文件map文件（便于调试）
        "moduleResolution": "node",
        "module": "esnext",
        "target": "es5", // 转化成的目标语言
        "baseUrl": "./",
        // "types": [],
        "typeRoots": ["./node_modules/@types/", "./node_modules/@autojs/"],
        "lib": ["es2015"],
        "allowJs": true,
        "paths": {
            "@/*": ["src/*"]
        }
    },
    "include": ["src/**/*", "./node_modules/@auto.pro/core/src/global.d.ts"], // 注意编译范围内的global.d.ts在 global.d.ts 文件中使用 declare 定义全局类型，TS 会自动识别这些声明无需import
    "exclude": ["*.test.ts"]  // global.d.ts是TS特有文件，这类文件‌不会‌被编译为 .js 文件，仅在开发阶段提供静态类型检查支持
}
